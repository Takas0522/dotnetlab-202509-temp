name: AI Answer on Issue 

on:
  issues:
    types: [opened]

jobs:
  ai-answer:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Collect Code Context
        run: |
          echo "Collecting code context..."
          mkdir context
          tar -czf context/code.tar.gz src
          ls -lh context

      - name: Call Azure OpenAI API
        id: ai
        run: |
          # コードコンテキストを読み取る
          CODE_SUMMARY=$(tar -xOzf context/code.tar.gz | head -c 8000 | jq -Rs .)
          # Issue内容をエスケープして安全にする  
          ISSUE_BODY_SAFE=$(echo "$ISSUE_BODY" | tr '"' "'" | tr '\n' ' ' | tr '\r' ' ')
          ISSUE_TITLE_SAFE=$(echo "$ISSUE_TITLE" | tr '"' "'" | tr '\n' ' ' | tr '\r' ' ')
          
          echo "Escaped Issue Title: $ISSUE_TITLE_SAFE"
          echo "Escaped Issue Body length: ${#ISSUE_BODY_SAFE}"
          
          # API呼び出し
          echo "Calling Azure OpenAI API..."
          echo "URL: https://$AZURE_OPENAI_ENDPOINT/openai/deployments/$AZURE_OPENAI_DEPLOYMENT/chat/completions?api-version=$AZURE_OPENAI_API_VERSION"
          
          RESPONSE=$(curl -s -w "HTTP_CODE:%{http_code}" -X POST \
            "https://$AZURE_OPENAI_ENDPOINT/openai/deployments/$AZURE_OPENAI_DEPLOYMENT/chat/completions?api-version=$AZURE_OPENAI_API_VERSION" \
            -H "Content-Type: application/json" \
            -H "api-key: $AZURE_OPENAI_API_KEY" \
            --data-raw "{
              \"messages\": [
                {\"role\": \"system\", \"content\": \"You are a helpful assistant that analyzes code and provides solutions. Respond in Japanese. Here is the code context: $CODE_SUMMARY\"},
                {\"role\": \"user\", \"content\": \"Issue Title: $ISSUE_TITLE_SAFE. Issue Body: $ISSUE_BODY_SAFE. Based on the provided code context, please analyze the issue and provide a detailed solution or explanation.\"}
              ],
              \"max_tokens\": 800,
              \"temperature\": 0.3
            }")
          
          curl_exit_code=$?
          echo "curl command completed with exit code: $curl_exit_code"
          
          if [ $curl_exit_code -ne 0 ]; then
            echo "curl command failed with exit code: $curl_exit_code"
            exit $curl_exit_code
          fi
          
          # HTTPステータスコードとレスポンスを分離
          HTTP_CODE=$(echo "$RESPONSE" | grep -o "HTTP_CODE:[0-9]*" | cut -d: -f2)
          JSON_RESPONSE=$(echo "$RESPONSE" | sed 's/HTTP_CODE:[0-9]*$//')
          
          echo "HTTP Status Code: $HTTP_CODE"
          echo "API Response: $JSON_RESPONSE"
          
          # HTTPステータスコードをチェック
          if [ "$HTTP_CODE" -ne 200 ]; then
            echo "API call failed with HTTP code: $HTTP_CODE"
            echo "Response: $JSON_RESPONSE"
            exit 1
          fi
          
          # JSONレスポンスの処理
          if echo "$JSON_RESPONSE" | jq -e '.choices[0].message.content' > /dev/null 2>&1; then
            AI_CONTENT=$(echo "$JSON_RESPONSE" | jq -r '.choices[0].message.content')
            echo "$AI_CONTENT" > ai_response.txt
            echo "response<<EOF" >> $GITHUB_OUTPUT
            echo "$AI_CONTENT" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "Failed to parse API response"
            echo "Response: $JSON_RESPONSE"
            exit 1
          fi
        env:
          AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }} # 例: https://<your-resource-name>.openai.azure.com
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          AZURE_OPENAI_DEPLOYMENT: ${{ secrets.AZURE_OPENAI_DEPLOYMENT }} # Azureで作成したモデルのデプロイ名
          AZURE_OPENAI_API_VERSION: "2025-01-01-preview"

      - name: Post AI Response as Comment
        run: gh issue comment ${{ github.event.issue.number }} --body "${{ steps.ai.outputs.response }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}